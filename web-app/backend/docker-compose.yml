services:
  backend:
    build: ./server
    volumes:
      - ./server:/usr/src/app # mount codebase for hot reload
    ports:
      - "5001:5001"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
      PYTHONUNBUFFERED: 1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    command: python app.py
    depends_on:
      - ollama  # Ensure that 'app' waits for 'ollama' to be ready
      - audio

  ollama:
    image: ollama/ollama
    container_name: ollama
    runtime: nvidia  # To use GPUs
    environment:
      - NVIDIA_VISIBLE_DEVICES=all  # Ensures the container can see all GPUs
    volumes:
      - ollama:/root/.ollama
      - ./ollama_serve:/root/ollama_serve  # Mount local ollama_serve directory to the container
    ports:
      - "11434:11434"  # Expose the Ollama service on port 11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    restart: "no"
    entrypoint: ["bash", "/root/ollama_serve/serve_ollama.sh"]  # Run the custom script to create and serve the model

  audio:
    build: ./audio_server
    volumes:
      - ./audio_server:/usr/src/app # mount codebase for hot reload
    ports:
      - "5002:5002"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
      PYTHONUNBUFFERED: 1
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    command: python app.py

volumes:
  ollama:
    driver: local  # Persistent volume for Ollama